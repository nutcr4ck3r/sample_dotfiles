#############
## General ##
################################################################################
## Escape time.
set-option -sg escape-time 10

## Reload config file.
bind R source-file ~/.tmux.conf

## Modify numberize.
set-option -g base-index 1

## Ignore mouse action.
set-option -g mouse off

## Window mode control. -> vi
set-window-option -g mode-keys vi

## Rectangle control.
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

## Sharing clipboard between host to tmux.
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -bi"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xsel -bi"

################
## Appearance ##
################################################################################
## Enable 256 color.
# set-option -g default-terminal "tmux-255color"
set-option -g default-terminal screen-256color
set -g terminal-overrides 'xterm:colors=256'

# Change status line color.
setw -g status-style fg=colour255,bg=colour234

# Disable status left/right.
set -g status-left ""
set -g status-right ""

# Move Window-status to right.
set -g status-justify right

# Change window-status appearance.
setw -g window-status-current-format '#[bg=colour2,fg=colour255] #I #W '
setw -g window-status-format '#[fg=colour242] #I #W '

# Change background color when pressing Prefix.
setw -g window-status-current-format '#[bg=colour2,fg=colour255]#{?client_prefix,#[bg=colour3],} #I #W '

## Hilight current pane.
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"
if-shell -b '[ "$(echo "$TMUX_VERSION => 2.9" | bc)" -eq 1 ]' \ 
set-option -g pane-active-border-style fg=black,bg="#808080"
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc)" -eq 1 ]' \
"set -g pane-active-border-fg black ;\
set -g pane-active-border-bg "#808080""

#############
## Logging ##
################################################################################
# Prefix C-p: Start logging.
bind-key C-p pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S_%%N\")] \${LINE}\" >> \${HOME}/.tmux/log/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "' \; display-message "Logging start."
# Prefix C-o Stop logging
bind-key C-o pipe-pane \; display-message "Logging end."
# Prefix v Open new window. Logging always. (-n is set window name.)
bind-key v new-window -n 'logging...' \; pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S_%%N\")] \${LINE}\" >> \${HOME}/.tmux/log/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "'

#################
## Key binding ##
################################################################################
## Set prefix key
set -g prefix C-f
unbind C-b
unbind BSpace

## Quit window.
bind q confirm kill-window

## Split window vertically.
bind i split-window -h

## Split window horizontally
bind u split-window -v

## Move pane like Vim key bind.
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

## Resize pane like Vim key bind.
bind -r H resize-pane -L 3
bind -r J resize-pane -D 3
bind -r K resize-pane -U 3
bind -r L resize-pane -R 3

## Operation copy mode like Vim key bind
# [ : begin copymode
# ] : paste
# v : begin selection
# V : begin line selection
# C-v:toggle rectangle selection
# y : yank
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi V send -X select-line
bind -T copy-mode-vi C-v send -X rectangle-toggle
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key p paste-buffer
